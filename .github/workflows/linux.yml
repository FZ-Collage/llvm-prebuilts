name: Build LLVM

on:
  push:
    branches:
      - run-actions
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write

env:
  PYTHON_VERSION: 3.13.5
  LLVM_VERSION: 20.1.7

jobs:
  configure-build-and-package-llvm-ubutnu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: llvm/llvm-project
          ref: llvmorg-${{ env.LLVM_VERSION }}

      - name: Download release Python
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'FZ-Collage/python-prebuilts'
          version: 'tags/v${{ env.PYTHON_VERSION }}'
          file: 'python-${{ env.PYTHON_VERSION }}-linux-x86_64.tar.gz'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Python to /usr
        run: |
          sudo tar -xvf python-${{ env.PYTHON_VERSION }}-linux-x86_64.tar.gz -C /usr/local

      - name: Configure and build LLVM
        run: |
          cd llvm
          cmake -G Ninja -B build -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ \
            -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra;lldb" \
            -DCMAKE_INSTALL_PREFIX=llvm-${{ env.LLVM_VERSION }}-linux-x86_64 \
            -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF \
            -DLLVM_BUILD_LLVM_DYLIB=OFF \
            -DLLVM_BUILD_LLVM_C_DYLIB=OFF
            -DCMAKE_C_FLAGS="-fPIC" \
            -DCMAKE_CXX_FLAGS="-fPIC" \
            -DLLVM_BUILD_EXAMPLES=OFF -DLLVM_INCLUDE_EXAMPLES=OFF \
            -DLLVM_INCLUDE_DOCS=OFF \
            -DLLVM_INCLUDE_UTILS=OFF \
            -DLLVM_BUILD_TESTS=OFF -DLLVM_INCLUDE_TESTS=OFF \
            -DLLVM_BUILD_BENCHMARKS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF \
            -DLLVM_ENABLE_ASSERTIONS=OFF \
            -DCLANG_INCLUDE_TESTS=OFF \
            -DLLDB_INCLUDE_TESTS=OFF
          cmake --build build --config Release
          cmake --install build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: llvm-${{ env.LLVM_VERSION }}-linux-x86_64
          path: llvm/llvm-${{ env.LLVM_VERSION }}-linux-x86_64
